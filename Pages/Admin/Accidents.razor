@page "/admin/accidents"
@page "/admin"
<!--inherits repository-->

@inherits OwningComponentBase<INTEX2.Models.IAccidentsRepository>

<br />
<br />
<NavLink class="btn btn-dark" href="/admin/accidents/create">Add accident</NavLink>
<br />
<br />

    <table class="table table-sm table-striped table-bordered">

        <thead>
            <tr>
                <th>Crash ID</th>
                <th>Crash Month</th>
                <th>Crash Year</th>
                <th>Route</th>

            </tr>

        </thead>

        @if (AccidentData?.Count() > 0)
        {
            //List the accidents
@foreach (INTEX2.Models.Accident a in AccidentData)
{
<tr>
    <td>@a.CRASH_ID</td>
    <td>@a.MONTH</td>
    <td>@a.YEAR</td>
    <td>@a.ROUTE</td>


    <td>
        <NavLink class="btn btn-dark btn-sm" href="@GetDetailsUrl(a.CRASH_ID)">Details</NavLink>
    </td>

    <td>
        <NavLink class="btn btn-dark btn-sm" href="@GetEditUrl(a.CRASH_ID)">Edit</NavLink>
    </td>

    <td>
        <NavLink class="btn btn-light text-dark btn-sm btn-outline-dark" href="@GetDeleteUrl(a.CRASH_ID)">Delete</NavLink>
    </td>
</tr>} }
            else
            {
<tr>
    <td colspan="5" class="text-center">No Accidents</td>
</tr>}
    </table>

@code { public INTEX2.Models.IAccidentsRepository repo => Service;

    public IEnumerable<INTEX2.Models.Accident> AccidentData { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        AccidentData = await repo.mytable.Take(1000).ToListAsync();
    }

    public string GetDetailsUrl(long id) => $"/admin/accidents/details/{id}";
    public string GetEditUrl(long id) => $"/admin/accidents/edit/{id}";
    public string GetDeleteUrl(long id) => $"/admin/accidents/delete/{id}";
 }
